<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_me</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=2
image_speed=0
walkSp=1
accSp=0.2
hsp=0
vsp=0
same=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//keyboard input
h_key=keyboard_check(ord("D"))-keyboard_check(ord("A"))
v_key=keyboard_check(ord("S"))-keyboard_check(ord("W"))



//speed
hsp=h_key*walkSp
vsp=v_key*walkSp
if h_key!=0 and v_key!=0{
    hsp*=sqrt(0.5)
    vsp*=sqrt(0.5)
}


//movement/collisions
hInc=(accSp*sign(hsp))
vInc=(accSp*sign(vsp))
absH=abs(hsp)
absV=abs(vsp)
spMax=max(absH,absV)
absVInc=abs(vInc)
absHInc=abs(hInc)
if absH&gt;absV{
    vInc=(absV/absH)*vInc
}
if absV&gt;absH{
    hInc=(absH/absV)*hInc
}
for(var i=0;i&lt;spMax;i+=accSp){
    if !place_meeting(x+hInc,y,obj_collision){
        x+=hInc
    }
    else{
        hsp=0
    }
    if !place_meeting(x,y+vInc,obj_collision){
        y+=vInc
    }
    else{
        vsp=0
    }
}

floorX=floor(x)
floorY=floor(y)

view_xview[0]=x-(view_wview[0]/2)
view_yview[0]=y-(view_hview[0]/2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
