<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>splits=2
bounces=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if splitLevel==0{
    if blue{
        if place_meeting(x,y,obj_heartPink){
            obj_heartPink.dead=true
        }
    }
    else{
        if place_meeting(x,y,obj_heartBlue){
            obj_heartBlue.anger+=obj_heartBlue.angerInt
        }
    }
}

if ((blue and (place_meeting(x,y,obj_heartPink) or place_meeting(x,y,obj_wall)) and (bounces&gt;0 or splitLevel&gt;0)) or (!blue and (place_meeting(x,y,obj_heartBlue) or place_meeting(x,y,obj_wall)))){
    if splitLevel&lt;=splits{
        with instance_create(x+lengthdir_x(image_yscale*(sprite_get_height(sprite_index)/2),image_angle+90),y+lengthdir_y(image_yscale*(sprite_get_height(sprite_index)/2),image_angle+90),obj_tear){
            hsp=other.hsp/2
            vsp=other.vsp/2
            sprite_index=other.sprite_index
            image_xscale=image_xscale/2
            image_yscale=image_yscale/2
            blue=other.blue
            image_angle=other.image_angle
            splitLevel=other.splitLevel+1
            bounces=0
        }
        with instance_create(x+lengthdir_x(image_yscale*(sprite_get_height(sprite_index)/2),image_angle-90),y+lengthdir_y(image_yscale*(sprite_get_height(sprite_index)/2),image_angle-90),obj_tear){
            hsp=other.hsp/2
            vsp=other.vsp/2
            sprite_index=other.sprite_index
            image_xscale=image_xscale/2
            image_yscale=image_yscale/2
            blue=other.blue
            image_angle=other.image_angle
            splitLevel=other.splitLevel+1
            bounces=0
        }
    }
    instance_destroy()
}
else if place_meeting(x+hsp,y,obj_wall) and blue and bounces==0 and splitLevel==0{
    hsp=-hsp
    bounces++
}
else if place_meeting(x,y+vsp,obj_wall) and blue and bounces==0 and splitLevel==0{
    vsp=-vsp
    bounces++
}
image_angle=point_direction(0,0,hsp,vsp)

x+=hsp
y+=vsp
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
